base-url=http://localhost:8080
%prod.base-url=${auth.base-url}

# ------------------------------------------------------------------------------
# Logging configuration
# ------------------------------------------------------------------------------
quarkus.banner.enabled=false
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{requestId}] [%p] [%c{2}] %m%n
quarkus.log.console.json=false
quarkus.rest-client.logging.body-limit=-1
quarkus.log.min-level=TRACE
quarkus.log.category."it.pagopa.swclient.mil".min-level=TRACE
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG
quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".level=${auth.jwt-validator-log:ERROR}
quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".min-level=${auth.jwt-validator-log:ERROR}

%dev.quarkus.log.level=INFO
%dev.quarkus.log.category."it.pagopa.swclient.mil".level=TRACE
%dev.quarkus.rest-client.logging.scope=request-response

%test.quarkus.log.level=ERROR
%test.quarkus.log.category."it.pagopa.swclient.mil".level=TRACE
%test.quarkus.rest-client.logging.scope=none

%prod.quarkus.log.console.json=${auth.json-log:true}
%prod.quarkus.log.level=${auth.quarkus-log-level:ERROR}
%prod.quarkus.log.category."it.pagopa.swclient.mil".level=${auth.app-log-level:ERROR}
%prod.quarkus.rest-client.logging.scope=${auth.quarkus-rest-client-logging-scope:none}

# ------------------------------------------------------------------------------
# Cryptoperiod of RSA keys in seconds (86400s = 1d)
# ------------------------------------------------------------------------------
cryptoperiod=${auth.cryptoperiod:43200}

# ------------------------------------------------------------------------------
# Key size (modulus) of RSA keys in bits
# ------------------------------------------------------------------------------
keysize=${auth.keysize:2048}

# ------------------------------------------------------------------------------
# Token configuration
# ------------------------------------------------------------------------------
access.duration=${auth.access.duration:300}
refresh.duration=${auth.refresh.duration:3600}

# ------------------------------------------------------------------------------
# MongoDB client configuration (clients, roles, users)
# ------------------------------------------------------------------------------
quarkus.mongodb.connect-timeout=${mongodb.connect-timeout:5}
quarkus.mongodb.read-timeout=${mongodb.read-timeout:10}
quarkus.mongodb.server-selection-timeout=${mongodb.server-selection-timeout:5}
%test.quarkus.mongodb.connection-string=mongodb://localhost:27017
%prod.quarkus.mongodb.connection-string=${mongodb.connection-string-1},${mongodb.connection-string-2}

# ------------------------------------------------------------------------------
# TTL for the authorization data cache
# ------------------------------------------------------------------------------
quarkus.cache.caffeine.expire-after-write=1h
%test.quarkus.cache.enabled=false

# ------------------------------------------------------------------------------
# Azure Key Vault API : used by mil-azure-services
# ------------------------------------------------------------------------------
azure-key-vault-keys.api-version=7.4
azure-key-vault-keys.get-keys.maxresults=${auth.keyvault.maxresults:999}
azure-key-vault-keys.get-key-version.maxresults=${auth.keyvault.maxresults:999}
azure-key-vault-keys.backoff.initial-duration=${auth.keyvault.backoff.initial-duration:1}
azure-key-vault-keys.backoff.jitter=${auth.keyvault.backoff.jitter:0.2}
azure-key-vault-keys.backoff.number-of-attempts=${auth.keyvault.backoff.number-of-attempts:3}

quarkus.rest-client.azure-key-vault-keys.url=http://dummy
%prod.quarkus.rest-client.azure-key-vault-keys.url=${auth.keyvault.url}

%dev.azure-key-vault-keys.emulator.enabled=true

# ------------------------------------------------------------------------------
# TTL for the key ID cache
# ------------------------------------------------------------------------------
keyid-cache.expire-after-write=3600

# ------------------------------------------------------------------------------
# OpenTelemetry
# ------------------------------------------------------------------------------
quarkus.opentelemetry.tracer.exporter.azure.enabled=false
quarkus.otel.azure.applicationinsights.connection.string=InstrumentationKey=dummy;IngestionEndpoint=https://dummy/;LiveEndpoint=https://dummy/;ApplicationId=dummy

%prod.quarkus.opentelemetry.tracer.exporter.azure.enabled=true
%prod.quarkus.otel.azure.applicationinsights.connection.string=${application-insights.connection-string}

# ------------------------------------------------------------------------------
# Location to retrieve public keys to verify access token when /token_info
# resource is invoked.
# ------------------------------------------------------------------------------
quarkus.smallrye-jwt.blocking-authentication=true
%dev.mp.jwt.verify.publickey.location=http://dummy
%prod.mp.jwt.verify.publickey.location=${jwt-publickey-location}