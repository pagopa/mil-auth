base-url=http://dummy
%prod.base-url=${auth.base-url}

# ------------------------------------------------------------------------------
# Logging configuration
# ------------------------------------------------------------------------------
quarkus.banner.enabled=false
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{requestId}] [%p] [%c{2}] %m%n
quarkus.log.console.json=false
quarkus.rest-client.logging.body-limit=-1
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG

%dev.quarkus.log.level=INFO
%dev.quarkus.log.category."it.pagopa.swclient.mil.auth".level=DEBUG
%dev.quarkus.rest-client.logging.scope=request-response

%test.quarkus.log.level=ERROR
%test.quarkus.log.category."it.pagopa.swclient.mil.auth".level=TRACE
%test.quarkus.log.category."it.pagopa.swclient.mil.auth".min-level=TRACE
%test.quarkus.rest-client.logging.scope=none

%prod.quarkus.log.console.json=true
%prod.quarkus.log.level=${auth.quarkus-log-level}
%prod.quarkus.log.category."it.pagopa.swclient.mil.auth".level=${auth.app-log-level}
%prod.quarkus.rest-client.logging.scope=${auth.quarkus-rest-client-logging-scope}

# ------------------------------------------------------------------------------
# Cryptoperiod of RSA keys in seconds (86400s = 1d)
# ------------------------------------------------------------------------------
cryptoperiod=86400
%prod.cryptoperiod=${auth.cryptoperiod}

# ------------------------------------------------------------------------------
# Key size (modulus) of RSA keys in bits
# ------------------------------------------------------------------------------
keysize=4096
%prod.keysize=${auth.keysize}

# ------------------------------------------------------------------------------
# Token configuration
# ------------------------------------------------------------------------------
access.duration=300
refresh.duration=3600

%prod.access.duration=${auth.access.duration}
%prod.refresh.duration=${auth.refresh.duration}

# ------------------------------------------------------------------------------
# Poynt integration
# ------------------------------------------------------------------------------
quarkus.rest-client.poynt-api.url=https://services-eu.poynt.net/
poynt-api.version=1.2

# ------------------------------------------------------------------------------
# Authorization data repository (clients, roles)
# ------------------------------------------------------------------------------
azure-storage-api.version=2019-07-07

quarkus.rest-client.auth-data-repository.url=https://mildconfst.blob.core.windows.net
%prod.quarkus.rest-client.auth-data-repository.url=${auth.data.url}

# ------------------------------------------------------------------------------
# TTL for the authorization data cache
# ------------------------------------------------------------------------------
quarkus.cache.caffeine.expire-after-write=1h
%test.quarkus.cache.enabled=false

# ------------------------------------------------------------------------------
# Azure Auth API
#
# This section will been removed when will be used mil-azure-services only to
# access Entra ID.
# ------------------------------------------------------------------------------
azure-auth-api.version=2019-08-01

quarkus.rest-client.azure-auth-api.url=http://dummy
azure-auth-api.identity=dummy

%prod.quarkus.rest-client.azure-auth-api.url=${IDENTITY_ENDPOINT}
%prod.azure-auth-api.identity=${IDENTITY_HEADER}

# ------------------------------------------------------------------------------
# Azure Auth API : used by mil-azure-services
# ------------------------------------------------------------------------------
azure-identity.api-version=2019-08-01
quarkus.rest-client.azure-identity.url=http://dummy
azure-identity.x-identity-header=dummy
%prod.quarkus.rest-client.azure-identity.url=${IDENTITY_ENDPOINT}
%prod.azure-identity.x-identity-header=${IDENTITY_HEADER}

# ------------------------------------------------------------------------------
# Azure Key Vault API
#
# This section will been removed when will be used mil-azure-services only to
# access to Key Vault.
# ------------------------------------------------------------------------------
azure-key-vault-api.version=7.4
quarkus.rest-client.azure-key-vault-api.url=http://dummy
%prod.quarkus.rest-client.azure-key-vault-api.url=${auth.keyvault.url}

# ------------------------------------------------------------------------------
# Azure Key Vault API : used by mil-azure-services
# ------------------------------------------------------------------------------
azure-key-vault-keys.api-version=7.4
quarkus.rest-client.azure-key-vault-keys.url=http://dummy
%prod.quarkus.rest-client.azure-key-vault-keys.url=${auth.keyvault.url}

# ------------------------------------------------------------------------------
# OpenTelemetry
# ------------------------------------------------------------------------------
quarkus.opentelemetry.tracer.exporter.azure.enabled=false
quarkus.otel.azure.applicationinsights.connection.string=InstrumentationKey=dummy;IngestionEndpoint=https://dummy/;LiveEndpoint=https://dummy/;ApplicationId=dummy

%prod.quarkus.opentelemetry.tracer.exporter.azure.enabled=true
%prod.quarkus.otel.azure.applicationinsights.connection.string=${application-insights.connection-string}

# ------------------------------------------------------------------------------
# Location to retrieve public keys to verify access token when /token_info
# resource is invoked.
# ------------------------------------------------------------------------------
%dev.mp.jwt.verify.publickey.location=/.well-known/jwks.json
%prod.mp.jwt.verify.publickey.location=${auth.base-url}/.well-known/jwks.json
